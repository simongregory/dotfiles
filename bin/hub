#!/usr/bin/env ruby

# Nip to github in your default browser.
#
# If you're inside a repo whose origin is github
# then you'll end up looking at it on the github
# site. Works with git 1.8

info = `git remote -v 2>/dev/null`
print "Not a git repository, " if info =~ /Not a git repository/

remote_regex = /^origin\s+(git@|https:\/\/)github.com[:\/]([\w\d\/.-]+)(\.git)?/
repo = info.match(remote_regex)[2] rescue ''

ARGV[0] = 'issues' if ARGV[0] === 'i'
ARGV[0] = 'releases' if ARGV[0] === 'r'
ARGV[0] = 'pulls' if ARGV[0] === 'p'
ARGV[0] = 'pulls' if ARGV[0] === 'pr'

path = ['releases', 'pulls', 'commits', 'issues'].include?(ARGV[0]) ? "/#{ARGV[0]}" : ''

go_to = "https://github.com/#{repo}#{path}"
puts "opening: #{go_to}"

`open #{go_to}`

# Feature: Pass in a file reference to open on GH
#
# if ARGV[0] && File.file?(ARGV[0])
#   puts "Yes #{ARGV[0]}"
# else
#   puts "No #{ARGV[0]}"
# end
#
# branch_name = `git rev-parse --abbrev-ref HEAD`
#
# Dealing with relative paths and branches
